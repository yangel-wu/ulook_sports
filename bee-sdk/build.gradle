apply plugin: 'com.android.library'

android {
    signingConfigs {
        config {
        }
    }
    compileSdkVersion 22
    buildToolsVersion "22.0.1"
    defaultConfig {
        minSdkVersion 9 //upgrade to 10 if you require PayPal for safety
        targetSdkVersion 22
        versionCode 11
        versionName "2.0.1"
    }
    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    /*  以下标识
    //must gson
    libs/gson-2.2.4.jar

    //wechat，已经包含微信支付和分享，不要重复引入jar
    libs/libammsdk.jar

    //ali
    libs/alipaysdk.jar
    libs/alipayutdid.jar
    libs/alipaysecsdk.jar

    //union pay
    libs/UPPayAssistEx.jar
    libs/UPPayPluginEx.jar

    //QRCode
    libs/zxing-3.2.0.jar

    //baidu
    Cashier_SDK-v4.2.0.jar

    //paypal
    PayPalAndroidSDK-2.9.11.jar

    */

}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

//以下用于生成sdk jar
//gradle makeJar
task clearJar(type: Delete) {
    delete fileTree(dir: 'build/libs' , include: 'beecloud*.jar')
}

task makeJar(type:org.gradle.api.tasks.bundling.Jar) {
    //指定生成的jar名
    baseName 'beecloud-2.0.2'
    //从哪里打包class文件
    from('build/intermediates/classes/release/cn/beecloud')
    //打包到jar后的目录结构
    into('cn/beecloud')
    //去掉不需要打包的目录和文件
    exclude('test/', 'BuildConfig.class', 'R.class')
    //去掉R$开头的文件
    exclude{ it.name.startsWith('R$');}
}

makeJar.dependsOn(clearJar, build)

//以下用于生成javadoc
//gradle generateReleaseJavaDoc --info
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

android.libraryVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        //title = "$name $version API"
        title = "BeeCloud Android SDK API"
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
        options {
            encoding 'UTF-8'
            charSet 'UTF-8'
            links "http://docs.oracle.com/javase/7/docs/api/"
            linksOffline "http://d.android.com/reference","${android.sdkDirectory}/docs/reference"
        }
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}